{
	"info": {
		"_postman_id": "5aff3d45-1e61-4adf-846a-57935c86df09",
		"name": "petStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20645391"
	},
	"item": [
		{
			"name": "setOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test case1\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\")\r",
							"});\r",
							"pm.test(\"Test case2\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2022-07-26T12:17:53.762+0000\")\r",
							"});\r",
							"\r",
							"pm.test(\"Test case3\", function () {\r",
							"    const jsonResponse = pm.response.json();\r",
							"    pm.expect(jsonResponse.id).to.eql(1)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"petId\": 1,\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2022-07-26T12:17:53.762Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}",
					"host": [
						"{{url}}{{store}}{{order}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setOrder2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test caese2\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\")\r",
							"});\r",
							"pm.test(\"Test caese3\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2022-07-26T12:17:53.762+0000\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 2,\r\n  \"petId\": 2,\r\n  \"quantity\": 2,\r\n  \"shipDate\": \"2022-07-26T12:17:53.762Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}",
					"host": [
						"{{url}}{{store}}{{order}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setOrder3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test caese2\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\")\r",
							"});\r",
							"pm.test(\"Test caese3\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"2022-07-26T12:17:53.762+0000\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 3,\r\n  \"petId\": 3,\r\n  \"quantity\": 3,\r\n  \"shipDate\": \"2022-07-26T12:17:53.762Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}",
					"host": [
						"{{url}}{{store}}{{order}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getOrderById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"\r",
							"pm.test(\"Test caese1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1)\r",
							"});\r",
							"pm.test(\"API response contains the expected fields\", () => {\r",
							"  const response = pm.response.json();\r",
							"\r",
							"  // the line below checks value \r",
							"  pm.expect(response).to.have.property(\"id\", 1);\r",
							"\r",
							"  // the line below checks value \r",
							"  pm.expect(response).to.have.property(\"petId\", 1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}/1",
					"host": [
						"{{url}}{{store}}{{order}}"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "getOrderById2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"the endpoint returns the expected status code\", () => {\r",
							"  // comma separate the valid response codes below\r",
							"  const expectedStatusCodes = [200, 201];\r",
							"\r",
							"  pm.expect(pm.response.code).to.be.oneOf(\r",
							"    expectedStatusCodes,\r",
							"    `expected response status to be one of ${expectedStatusCodes} but got ${pm.response.code}.`\r",
							"  );\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}/2",
					"host": [
						"{{url}}{{store}}{{order}}"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"API response contains the expected fields\", () => {\r",
							"  const response = pm.response.json();\r",
							"\r",
							"  // the line below checks value \r",
							"  pm.expect(response).to.have.property(\"message\", \"3\");\r",
							"\r",
							"  // the line below checks value \r",
							"  pm.expect(response).to.have.property(\"code\", 200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}{{order}}/3",
					"host": [
						"{{url}}{{store}}{{order}}"
					],
					"path": [
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "getInventory",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}{{store}}/inventory",
					"host": [
						"{{url}}{{store}}"
					],
					"path": [
						"inventory"
					]
				}
			},
			"response": []
		}
	]
}